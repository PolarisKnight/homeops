---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
  labels:
    app: homepage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: homepage
  template:
    metadata:
      labels:
        app: homepage
    spec:
      containers:
        - name: homepage
          image: "ghcr.io/gethomepage/homepage:latest"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          volumeMounts:
            - mountPath: /app/config/custom/js
              name: homepage-config
              subPath: custom.js
            - mountPath: /app/config/custom.css
              name: homepage-config
              subPath: custom.css
            - mountPath: /app/config/bookmarks.yaml
              name: homepage-config
              subPath: bookmarks.yaml
            - mountPath: /app/config/docker.yaml
              name: homepage-config
              subPath: docker.yaml
            - mountPath: /app/config/kubernetes.yaml
              name: homepage-config
              subPath: kubernetes.yaml
            - mountPath: /app/config/services.yaml
              name: homepage-config
              subPath: services.yaml
            - mountPath: /app/config/settings.yaml
              name: homepage-config
              subPath: settings.yaml
            - mountPath: /app/config/widgets.yaml
              name: homepage-config
              subPath: widgets.yaml
            - mountPath: /app/config/logs
              name: logs
      volumes:  
        - name: homepage-config
          configMap:
            name: homepage
        - name: logs 
          emptyDir: {}
      

---
apiVersion: v1
kind: Service
metadata:
  name: homepage-service
spec:
  selector:
    app: homepage
  ports:
    - name: http
      port: 3000
      targetPort: http
      protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homepage-ingress
  annotations:
      # nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/service-upstream: "true"
      gethomepage.dev/description: Dynamically Detected Homepage
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: Cluster Management
      gethomepage.dev/icon: homepage.png
      gethomepage.dev/name: Homepage
spec:
  ingressClassName: nginx
  rules:
    - host: homepage.test
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: homepage-service
                port:
                  number: 3000
